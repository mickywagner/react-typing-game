{"version":3,"sources":["Hooks/useWordGame.js","App.js","index.js"],"names":["useWordGame","startTime","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textBoxRef","useRef","updateText","e","value","target","calculateWord","wordArray","trim","split","filter","word","console","log","length","startGame","current","disabled","focus","endGame","useEffect","setTimeout","time","App","className","placeholder","onChange","ref","onClick","ReactDOM","render","document","getElementById"],"mappings":"oPAiDeA,MA/Cf,WAAsC,IAAjBC,EAAgB,uDAAJ,GAAI,EAETC,mBAAS,IAFA,mBAE3BC,EAF2B,KAErBC,EAFqB,OAGOF,mBAASD,GAHhB,mBAG5BI,EAH4B,KAGbC,EAHa,OAIOJ,oBAAS,GAJhB,mBAI5BK,EAJ4B,KAIbC,EAJa,OAKDN,mBAAS,GALR,mBAK5BO,EAL4B,KAKjBC,EALiB,KAM7BC,EAAaC,iBAAO,MAE1B,SAASC,EAAWC,GAAI,IACdC,EAAUD,EAAEE,OAAZD,MACRX,EAAQW,GAGV,SAASE,EAAcd,GACrB,IAAMe,EAAYf,EAAKgB,OAAOC,MAAM,KAAKC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAExD,OADAC,QAAQC,IAAIN,EAAUO,QACfP,EAAUO,OAGnB,SAASC,IACPlB,GAAiB,GACjBF,EAAiBL,GACjBS,EAAa,GACbN,EAAQ,IACRO,EAAWgB,QAAQC,UAAW,EAC9BjB,EAAWgB,QAAQE,QAGvB,SAASC,IACPtB,GAAiB,GACjBE,EAAaO,EAAcd,IAa7B,OAVE4B,qBAAU,WACLxB,GAAiBF,EAAgB,EACpC2B,YAAW,WACH1B,GAAiB,SAAA2B,GAAI,OAAIA,EAAO,OACrC,KACyB,IAAlB5B,GACRyB,MAEH,CAACzB,EAAeE,IAEZ,CAACJ,OAAMU,aAAYN,gBAAeI,aAAYN,gBAAeqB,YAAWjB,c,MCJhEyB,MArCf,WAAgB,IAAD,EASTlC,IAPFG,EAFW,EAEXA,KACAU,EAHW,EAGXA,WACAN,EAJW,EAIXA,cACAI,EALW,EAKXA,WACAN,EANW,EAMXA,cACAqB,EAPW,EAOXA,UACAjB,EARW,EAQXA,UAGF,OACE,yBAAK0B,UAAU,OACb,6BACM,sDACA,8BACI,8BACEC,YAAY,kBACZrB,MAAOZ,EACPkC,SAAUxB,EACVe,UAAWrB,EACX+B,IAAK3B,KAGX,6CAAmBN,EAAnB,YACA,4BACEkC,QAASb,EACTE,SAAUrB,GAFZ,cAMA,2CAAiBE,MC7B7B+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4e3c9078.chunk.js","sourcesContent":["import {useState, useRef, useEffect} from 'react'\n\nfunction useWordGame(startTime = 15) {\n\n  const [ text, setText ] = useState(\"\")\n  const [timeRemaining, setTimeRemaining] = useState(startTime)\n  const [isTimeRunning, setIsTimeRunning] = useState(false)\n  const [wordCount, setWordCount] = useState(0)\n  const textBoxRef = useRef(null)\n\n  function updateText(e) {\n    const { value } = e.target\n    setText(value)\n  }\n\n  function calculateWord(text) {\n    const wordArray = text.trim().split(\" \").filter(word => word !== \"\")\n    console.log(wordArray.length)\n    return wordArray.length\n  }\n\n  function startGame() {\n    setIsTimeRunning(true)\n    setTimeRemaining(startTime)\n    setWordCount(0)\n    setText(\"\")\n    textBoxRef.current.disabled = false\n    textBoxRef.current.focus()\n}\n\nfunction endGame() {\n  setIsTimeRunning(false)\n  setWordCount(calculateWord(text))\n}\n\n  useEffect(() => {\n    if(isTimeRunning && timeRemaining > 0) {\n    setTimeout(() => {\n            setTimeRemaining(time => time - 1)\n    }, 1000)\n    } else if(timeRemaining === 0) {\n      endGame()\n  }\n}, [timeRemaining, isTimeRunning])\n\nreturn {text, updateText, isTimeRunning, textBoxRef, timeRemaining, startGame, wordCount }\n\n}\n\nexport default useWordGame","import React from 'react';\nimport useWordGame from './Hooks/useWordGame'\nimport './App.css';\n\nfunction App() {\n  const {\n    text,\n    updateText,\n    isTimeRunning,\n    textBoxRef,\n    timeRemaining,\n    startGame,\n    wordCount\n  } = useWordGame()\n\n  return (\n    <div className=\"App\">\n      <div>\n            <h1>Test Your Typing Speed</h1>\n            <form>\n                <textarea \n                  placeholder=\"Start typing...\"\n                  value={text}\n                  onChange={updateText}\n                  disabled={!isTimeRunning}\n                  ref={textBoxRef}\n                />\n            </form>\n            <h4>Time remaing: {timeRemaining} seconds</h4>\n            <button \n              onClick={startGame}\n              disabled={isTimeRunning}\n            >\n              Start Game\n            </button>\n            <h1>Word Count: {wordCount}</h1>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}